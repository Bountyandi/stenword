/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@ionic/core';
import 'ionicons';

import {
  NoteProps,
} from './components/list-notes/list-notes';
import {
  NoteProps as NoteProps2,
} from './components/list-notes/list-notes';

declare global {

  namespace StencilComponents {
    interface AddNoteForm {
      'addNote': (note: NoteProps) => void;
      'body': string;
      'name': string;
      'section': string;
      'tags': string[];
    }
  }

  interface HTMLAddNoteFormElement extends StencilComponents.AddNoteForm, HTMLStencilElement {}

  var HTMLAddNoteFormElement: {
    prototype: HTMLAddNoteFormElement;
    new (): HTMLAddNoteFormElement;
  };
  interface HTMLElementTagNameMap {
    'add-note-form': HTMLAddNoteFormElement;
  }
  interface ElementTagNameMap {
    'add-note-form': HTMLAddNoteFormElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'add-note-form': JSXElements.AddNoteFormAttributes;
    }
  }
  namespace JSXElements {
    export interface AddNoteFormAttributes extends HTMLAttributes {
      'addNote'?: (note: NoteProps) => void;
      'body'?: string;
      'name'?: string;
      'section'?: string;
      'tags'?: string[];
    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppHome {

    }
  }

  interface HTMLAppHomeElement extends StencilComponents.AppHome, HTMLStencilElement {}

  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-home': JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface ListNotes {
      'notes': NoteProps[];
    }
  }

  interface HTMLListNotesElement extends StencilComponents.ListNotes, HTMLStencilElement {}

  var HTMLListNotesElement: {
    prototype: HTMLListNotesElement;
    new (): HTMLListNotesElement;
  };
  interface HTMLElementTagNameMap {
    'list-notes': HTMLListNotesElement;
  }
  interface ElementTagNameMap {
    'list-notes': HTMLListNotesElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'list-notes': JSXElements.ListNotesAttributes;
    }
  }
  namespace JSXElements {
    export interface ListNotesAttributes extends HTMLAttributes {
      'notes'?: NoteProps[];
    }
  }
}


declare global {

  namespace StencilComponents {
    interface MyApp {

    }
  }

  interface HTMLMyAppElement extends StencilComponents.MyApp, HTMLStencilElement {}

  var HTMLMyAppElement: {
    prototype: HTMLMyAppElement;
    new (): HTMLMyAppElement;
  };
  interface HTMLElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  interface ElementTagNameMap {
    'my-app': HTMLMyAppElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'my-app': JSXElements.MyAppAttributes;
    }
  }
  namespace JSXElements {
    export interface MyAppAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
